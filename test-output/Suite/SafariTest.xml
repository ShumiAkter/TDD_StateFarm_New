<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Shumis-Air.fios-router.home" failures="0" tests="1" name="SafariTest" time="2.083" errors="0" timestamp="2023-05-15T10:51:55 EDT">
  <testcase classname="base.TestBase" name="@BeforeMethod beforeEachTest" time="1.989">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Could not create a session: You must enable the &amp;apos;Allow Remote Automation&amp;apos; option in Safari&amp;apos;s Develop menu to control Safari via WebDriver. 
Host info: host: &amp;apos;Shumis-Air.fios-router.home&amp;apos;, ip: &amp;apos;fe80:0:0:0:c40:53a3:bb3f:a8b6%en0&amp;apos;
Build info: version: &amp;apos;4.8.3&amp;apos;, revision: &amp;apos;e5e76298c3&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;12.6.3&amp;apos;, java.version: &amp;apos;17.0.4&amp;apos;
Driver info: org.openqa.selenium.safari.SafariDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: safari}], desiredCapabilities=Capabilities {browserName: safari}}]
Capabilities {browserName: safari}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Could not create a session: You must enable the 'Allow Remote Automation' option in Safari's Develop menu to control Safari via WebDriver. 
Host info: host: 'Shumis-Air.fios-router.home', ip: 'fe80:0:0:0:c40:53a3:bb3f:a8b6%en0'
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '12.6.3', java.version: '17.0.4'
Driver info: org.openqa.selenium.safari.SafariDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: safari}], desiredCapabilities=Capabilities {browserName: safari}}]
Capabilities {browserName: safari}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:148)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:106)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:86)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:82)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:51)
at base.TestBase.initiatDriver(TestBase.java:73)
at base.TestBase.beforeEachTest(TestBase.java:50)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase classname="base.TestBase" name="@AfterMethod closingBrower" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closingBrower -->
  <testcase classname="AllTest.AutoTest" name="getA_Quote" time="0.0">
    <skipped/>
  </testcase> <!-- getA_Quote -->
</testsuite> <!-- SafariTest -->
